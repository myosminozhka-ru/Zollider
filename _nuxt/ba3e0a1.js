(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{399:function(e,t,l){"use strict";l.d(t,"a",(function(){return S}));var r=Object.defineProperty,o=(e,t,l)=>(((e,t,l)=>{t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:l}):e[t]=l})(e,"symbol"!=typeof t?t+"":t,l),l);const n=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,d=/^-?[0-9]\d*$/,c=/^(?=.*[A-Za-z])(?=.*\d).{8,}$/,h=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,f=e=>"string"!=typeof e||""===e;var m=(e=>(e.Required="required",e.Email="email",e.MinLength="minLength",e.MaxLength="maxLength",e.Password="password",e.Number="number",e.Integer="integer",e.MaxNumber="maxNumber",e.MinNumber="minNumber",e.StrongPassword="strongPassword",e.CustomRegexp="customRegexp",e.MinFilesCount="minFilesCount",e.MaxFilesCount="maxFilesCount",e.Files="files",e))(m||{}),v=(e=>(e.Required="required",e))(v||{}),y=(e=>(e.Label="label",e.LabelArrow="labelArrow",e))(y||{});const F=[{key:m.Required,dict:{en:"The field is required"}},{key:m.Email,dict:{en:"Email has invalid format"}},{key:m.MaxLength,dict:{en:"The field must contain a maximum of :value characters"}},{key:m.MinLength,dict:{en:"The field must contain a minimum of :value characters"}},{key:m.Password,dict:{en:"Password must contain minimum eight characters, at least one letter and one number"}},{key:m.StrongPassword,dict:{en:"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character"}},{key:m.Number,dict:{en:"Value should be a number"}},{key:m.MaxNumber,dict:{en:"Number should be less or equal than :value"}},{key:m.MinNumber,dict:{en:"Number should be more or equal than :value"}},{key:m.MinFilesCount,dict:{en:"Files count should be more or equal than :value"}},{key:m.MaxFilesCount,dict:{en:"Files count should be less or equal than :value"}},{key:m.Files,dict:{en:"Uploaded files have one or several invalid properties (extension/size/type etc)."}}],C=e=>"object"==typeof e&&null!==e&&"then"in e&&"function"==typeof e.then,k=e=>Array.isArray(e)?e.filter((e=>e.length>0)):"string"==typeof e&&e.trim()?[...e.split(" ").filter((e=>e.length>0))]:[],w=element=>element instanceof Element||element instanceof HTMLDocument,L={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1,validateBeforeSubmitting:!1};class S{constructor(form,e,t){o(this,"form",null),o(this,"fields",{}),o(this,"groupFields",{}),o(this,"errors",{}),o(this,"isValid",!1),o(this,"isSubmitted",!1),o(this,"globalConfig",L),o(this,"errorLabels",{}),o(this,"successLabels",{}),o(this,"eventListeners",[]),o(this,"dictLocale",F),o(this,"currentLocale","en"),o(this,"customStyleTags",{}),o(this,"onSuccessCallback"),o(this,"onFailCallback"),o(this,"onValidateCallback"),o(this,"tooltips",[]),o(this,"lastScrollPosition"),o(this,"isScrollTick"),o(this,"fieldIds",new Map),o(this,"getKeyByFieldSelector",(e=>this.fieldIds.get(e))),o(this,"getFieldSelectorByKey",(e=>{for(const[t,l]of this.fieldIds)if(e===l)return t})),o(this,"getCompatibleFields",(()=>{const e={};return Object.keys(this.fields).forEach((t=>{let l=t;const r=this.getFieldSelectorByKey(t);"string"==typeof r&&(l=r),e[l]={...this.fields[t]}})),e})),o(this,"setKeyByFieldSelector",(e=>{if(this.fieldIds.has(e))return this.fieldIds.get(e);const t=String(this.fieldIds.size+1);return this.fieldIds.set(e,t),t})),o(this,"refreshAllTooltips",(()=>{this.tooltips.forEach((e=>{e.refresh()}))})),o(this,"handleDocumentScroll",(()=>{this.lastScrollPosition=window.scrollY,this.isScrollTick||(window.requestAnimationFrame((()=>{this.refreshAllTooltips(),this.isScrollTick=!1})),this.isScrollTick=!0)})),o(this,"formSubmitHandler",(e=>{e.preventDefault(),this.isSubmitted=!0,this.validateHandler(e)})),o(this,"handleFieldChange",(e=>{let t;for(const l in this.fields){if(this.fields[l].elem===e){t=l;break}}t&&(this.fields[t].touched=!0,this.validateField(t,!0))})),o(this,"handleGroupChange",(e=>{let t;for(const l in this.groupFields){if(this.groupFields[l].elems.find((t=>t===e))){t=l;break}}t&&(this.groupFields[t].touched=!0,this.validateGroup(t,!0))})),o(this,"handlerChange",(e=>{e.target&&(this.handleFieldChange(e.target),this.handleGroupChange(e.target),this.renderErrors())})),this.initialize(form,e,t)}initialize(form,e,t){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=L,this.errorLabels={},this.successLabels={},this.eventListeners=[],this.customStyleTags={},this.tooltips=[],this.currentLocale="en","string"==typeof form){const e=document.querySelector(form);if(!e)throw Error(`Form with ${form} selector not found! Please check the form selector`);this.setForm(e)}else{if(!(form instanceof HTMLFormElement))throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");this.setForm(form)}if(this.globalConfig={...L,...e},t&&(this.dictLocale=[...t,...F]),this.isTooltip()){const e=document.createElement("style");e.textContent=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",this.customStyleTags[y.Label]=document.head.appendChild(e),this.addListener("scroll",document,this.handleDocumentScroll)}}getLocalisedString(e,t,l){var r;const o=null!=l?l:e;let n=null==(r=this.dictLocale.find((e=>e.key===o)))?void 0:r.dict[this.currentLocale];if(n||l&&(n=l),n&&void 0!==t)switch(e){case m.MaxLength:case m.MinLength:case m.MaxNumber:case m.MinNumber:case m.MinFilesCount:case m.MaxFilesCount:n=n.replace(":value",String(t))}return n||l||"Value is incorrect"}getFieldErrorMessage(e,t){const l="function"==typeof e.errorMessage?e.errorMessage(this.getElemValue(t),this.fields):e.errorMessage;return this.getLocalisedString(e.rule,e.value,l)}getFieldSuccessMessage(e,t){const l="function"==typeof e?e(this.getElemValue(t),this.fields):e;return this.getLocalisedString(void 0,void 0,l)}getGroupErrorMessage(e){return this.getLocalisedString(e.rule,void 0,e.errorMessage)}getGroupSuccessMessage(e){if(e.successMessage)return this.getLocalisedString(void 0,void 0,e.successMessage)}setFieldInvalid(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t,this.fields[e].elem)}setFieldValid(e,t){this.fields[e].isValid=!0,void 0!==t&&(this.fields[e].successMessage=this.getFieldSuccessMessage(t,this.fields[e].elem))}setGroupInvalid(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}setGroupValid(e,t){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(t)}getElemValue(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}validateGroupRule(e,t,l){if(l.rule===v.Required)t.every((e=>!e.checked))?this.setGroupInvalid(e,l):this.setGroupValid(e,l)}validateFieldRule(e,t,l,r=!1){const o=l.value,v=this.getElemValue(t);if(l.plugin){l.plugin(v,this.getCompatibleFields())||this.setFieldInvalid(e,l)}else{switch(l.rule){case m.Required:(e=>{let t=e;return"string"==typeof e&&(t=e.trim()),!t})(v)&&this.setFieldInvalid(e,l);break;case m.Email:if(f(v))break;y=v,n.test(y)||this.setFieldInvalid(e,l);break;case m.MaxLength:if(void 0===o){console.error(`Value for ${l.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if("number"!=typeof o){console.error(`Value for ${l.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if(f(v))break;((e,t)=>e.length>t)(v,o)&&this.setFieldInvalid(e,l);break;case m.MinLength:if(void 0===o){console.error(`Value for ${l.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if("number"!=typeof o){console.error(`Value for ${l.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if(f(v))break;((e,t)=>e.length<t)(v,o)&&this.setFieldInvalid(e,l);break;case m.Password:if(f(v))break;(e=>c.test(e))(v)||this.setFieldInvalid(e,l);break;case m.StrongPassword:if(f(v))break;(e=>h.test(e))(v)||this.setFieldInvalid(e,l);break;case m.Number:if(f(v))break;(e=>"string"==typeof e&&!isNaN(+e)&&!isNaN(parseFloat(e)))(v)||this.setFieldInvalid(e,l);break;case m.Integer:if(f(v))break;(e=>d.test(e))(v)||this.setFieldInvalid(e,l);break;case m.MaxNumber:{if(void 0===o){console.error(`Value for ${l.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if("number"!=typeof o){console.error(`Value for ${l.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if(f(v))break;const t=+v;(Number.isNaN(t)||((e,t)=>e>t)(t,o))&&this.setFieldInvalid(e,l);break}case m.MinNumber:{if(void 0===o){console.error(`Value for ${l.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if("number"!=typeof o){console.error(`Value for ${l.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if(f(v))break;const t=+v;(Number.isNaN(t)||((e,t)=>e<t)(t,o))&&this.setFieldInvalid(e,l);break}case m.CustomRegexp:{if(void 0===o)return console.error(`Value for ${l.rule} rule for [${e}] field is not defined. This field will be always invalid.`),void this.setFieldInvalid(e,l);let t;try{t=new RegExp(o)}catch(t){console.error(`Value for ${l.rule} rule for [${e}] should be a valid regexp. This field will be always invalid.`),this.setFieldInvalid(e,l);break}const r=String(v);""===r||t.test(r)||this.setFieldInvalid(e,l);break}case m.MinFilesCount:if(void 0===o){console.error(`Value for ${l.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,l);break}if("number"!=typeof o){console.error(`Value for ${l.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if(Number.isFinite(null==v?void 0:v.length)&&v.length<o){this.setFieldInvalid(e,l);break}break;case m.MaxFilesCount:if(void 0===o){console.error(`Value for ${l.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,l);break}if("number"!=typeof o){console.error(`Value for ${l.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,l);break}if(Number.isFinite(null==v?void 0:v.length)&&v.length>o){this.setFieldInvalid(e,l);break}break;case m.Files:{if(void 0===o)return console.error(`Value for ${l.rule} rule for [${e}] field is not defined. This field will be always invalid.`),void this.setFieldInvalid(e,l);if("object"!=typeof o)return console.error(`Value for ${l.rule} rule for [${e}] field should be an object. This field will be always invalid.`),void this.setFieldInvalid(e,l);const t=o.files;if("object"!=typeof t)return console.error(`Value for ${l.rule} rule for [${e}] field should be an object with files array. This field will be always invalid.`),void this.setFieldInvalid(e,l);const r=(e,t)=>{const l=Number.isFinite(t.minSize)&&e.size<t.minSize,r=Number.isFinite(t.maxSize)&&e.size>t.maxSize,o=Array.isArray(t.names)&&!t.names.includes(e.name),n=Array.isArray(t.extensions)&&!t.extensions.includes(e.name.split(".")[e.name.split(".").length-1]),d=Array.isArray(t.types)&&!t.types.includes(e.type);return l||r||o||n||d};if("object"==typeof v&&null!==v)for(let o=0,n=v.length;o<n;++o){const n=v.item(o);if(!n){this.setFieldInvalid(e,l);break}if(r(n,t)){this.setFieldInvalid(e,l);break}}break}default:{if("function"!=typeof l.validator)return console.error(`Validator for custom rule for [${e}] field should be a function. This field will be always invalid.`),void this.setFieldInvalid(e,l);const t=l.validator(v,this.getCompatibleFields());if("boolean"!=typeof t&&"function"!=typeof t&&console.error(`Validator return value for [${e}] field should be boolean or function. It will be cast to boolean.`),"function"==typeof t){if(!r){this.fields[e].asyncCheckPending=!1;const r=t();return C(r)?r.then((t=>{t||this.setFieldInvalid(e,l)})).catch((()=>{this.setFieldInvalid(e,l)})):(console.error(`Validator function for custom rule for [${e}] field should return a Promise. This field will be always invalid.`),void this.setFieldInvalid(e,l))}this.fields[e].asyncCheckPending=!0}t||this.setFieldInvalid(e,l)}}var y}}isFormValid(){let e=!0;for(let i=0,t=Object.values(this.fields).length;i<t;++i){const t=Object.values(this.fields)[i];if(void 0===t.isValid){e=void 0;break}if(!1===t.isValid){e=!1;break}}for(let i=0,t=Object.values(this.groupFields).length;i<t;++i){const t=Object.values(this.groupFields)[i];if(void 0===t.isValid){e=void 0;break}if(!1===t.isValid){e=!1;break}}return e}validateField(e,t=!1){var l;const r=this.fields[e];r.isValid=!0;const o=[];return[...r.rules].reverse().forEach((l=>{const n=this.validateFieldRule(e,r.elem,l,t);C(n)&&o.push(n)})),r.isValid&&this.setFieldValid(e,null==(l=r.config)?void 0:l.successMessage),Promise.allSettled(o).finally((()=>{var e;t&&(null==(e=this.onValidateCallback)||e.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))}))}revalidateField(e){if("string"!=typeof e&&!w(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);return t&&this.fields[t]?new Promise((e=>{this.validateField(t,!0).finally((()=>{this.clearFieldStyle(t),this.clearFieldLabel(t),this.renderFieldError(t,!0),e(!!this.fields[t].isValid)}))})):(console.error("Field not found. Check the field selector."),Promise.reject())}revalidateGroup(e){if("string"!=typeof e&&!w(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);return t&&this.groupFields[t]?new Promise((e=>{this.validateGroup(t).finally((()=>{this.clearFieldLabel(t),this.renderGroupError(t,!0),e(!!this.groupFields[t].isValid)}))})):(console.error("Group not found. Check the group selector."),Promise.reject())}validateGroup(e,t=!1){const l=this.groupFields[e],r=[];return[...l.rules].reverse().forEach((t=>{const o=this.validateGroupRule(e,l.elems,t);C(o)&&r.push(o)})),Promise.allSettled(r).finally((()=>{var e;t&&(null==(e=this.onValidateCallback)||e.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))}))}focusInvalidField(){for(const e in this.fields){const t=this.fields[e];if(!t.isValid){setTimeout((()=>t.elem.focus()),0);break}}}afterSubmitValidation(e=!1){this.renderErrors(e),this.globalConfig.focusInvalidField&&this.focusInvalidField()}validate(e=!1){return new Promise((t=>{const l=[];Object.keys(this.fields).forEach((e=>{const t=this.validateField(e);C(t)&&l.push(t)})),Object.keys(this.groupFields).forEach((e=>{const t=this.validateGroup(e);C(t)&&l.push(t)})),Promise.allSettled(l).then((()=>{var r;this.afterSubmitValidation(e),null==(r=this.onValidateCallback)||r.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}),t(!!l.length)}))}))}revalidate(){return new Promise((e=>{this.validateHandler(void 0,!0).finally((()=>{this.globalConfig.focusInvalidField&&this.focusInvalidField(),e(this.isValid)}))}))}validateHandler(e,t=!1){return this.globalConfig.lockForm&&this.lockForm(),this.validate(t).finally((()=>{var t,l;this.globalConfig.lockForm&&this.unlockForm(),this.isValid?null==(t=this.onSuccessCallback)||t.call(this,e):null==(l=this.onFailCallback)||l.call(this,this.getCompatibleFields(),this.groupFields)}))}setForm(form){this.form=form,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}addListener(e,t,l){t.addEventListener(e,l),this.eventListeners.push({type:e,elem:t,func:l})}removeListener(e,t,l){t.removeEventListener(e,l),this.eventListeners=this.eventListeners.filter((l=>l.type!==e||l.elem!==t))}addField(e,t,l){if("string"!=typeof e&&!w(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");let r;if(r="string"==typeof e?this.form.querySelector(e):e,!r)throw Error("Field doesn't exist in the DOM! Please check the field selector.");if(!Array.isArray(t)||!t.length)throw Error("Rules argument should be an array and should contain at least 1 element.");t.forEach((e=>{if(!("rule"in e||"validator"in e||"plugin"in e))throw Error("Rules argument must contain at least one rule or validator property.");if(!(e.validator||e.plugin||e.rule&&Object.values(m).includes(e.rule)))throw Error(`Rule should be one of these types: ${Object.values(m).join(", ")}. Provided value: ${e.rule}`)}));const o=this.setKeyByFieldSelector(e);return this.fields[o]={elem:r,rules:t,isValid:void 0,touched:!1,config:l},this.setListeners(r),(this.isSubmitted||this.globalConfig.validateBeforeSubmitting)&&this.validateField(o),this}removeField(e){if("string"!=typeof e&&!w(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);if(!t||!this.fields[t])return console.error("Field not found. Check the field selector."),this;const l=this.getListenerType(this.fields[t].elem.type);return this.removeListener(l,this.fields[t].elem,this.handlerChange),this.clearErrors(),delete this.fields[t],this}removeGroup(e){if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");const t=this.getKeyByFieldSelector(e);return t&&this.groupFields[t]?(this.groupFields[t].elems.forEach((e=>{const t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange)})),this.clearErrors(),delete this.groupFields[t],this):(console.error("Group not found. Check the group selector."),this)}addRequiredGroup(e,t,l,r){if("string"!=typeof e&&!w(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");let o;if(o="string"==typeof e?this.form.querySelector(e):e,!o)throw Error("Group selector not found! Please check the group selector.");const n=o.querySelectorAll("input"),d=Array.from(n).filter((input=>{const e=((e,t)=>{const l=[...t].reverse();for(let i=0,t=l.length;i<t;++i){const t=l[i];for(const l in e){const r=e[l];if(r.groupElem===t)return[l,r]}}return null})(this.groupFields,(e=>{let t=e;const l=[];for(;t;)l.unshift(t),t=t.parentNode;return l})(input));return!e||e[1].elems.find((e=>e!==input))})),c=this.setKeyByFieldSelector(e);return this.groupFields[c]={rules:[{rule:v.Required,errorMessage:t,successMessage:r}],groupElem:o,elems:d,touched:!1,isValid:void 0,config:l},n.forEach((input=>{this.setListeners(input)})),this}getListenerType(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";default:return"input"}}setListeners(e){const t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}clearFieldLabel(e){var t,l;null==(t=this.errorLabels[e])||t.remove(),null==(l=this.successLabels[e])||l.remove()}clearFieldStyle(e){var t,l,r,o;const n=this.fields[e],d=(null==(t=n.config)?void 0:t.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(d).forEach((e=>{n.elem.style[e]=""}));const c=(null==(l=n.config)?void 0:l.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(c).forEach((e=>{n.elem.style[e]=""})),n.elem.classList.remove(...k((null==(r=n.config)?void 0:r.errorFieldCssClass)||this.globalConfig.errorFieldCssClass),...k((null==(o=n.config)?void 0:o.successFieldCssClass)||this.globalConfig.successFieldCssClass))}clearErrors(){var e,t;Object.keys(this.errorLabels).forEach((e=>this.errorLabels[e].remove())),Object.keys(this.successLabels).forEach((e=>this.successLabels[e].remove()));for(const e in this.fields)this.clearFieldStyle(e);for(const l in this.groupFields){const r=this.groupFields[l],o=(null==(e=r.config)?void 0:e.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(o).forEach((e=>{r.elems.forEach((t=>{var l;t.style[e]="",t.classList.remove(...k((null==(l=r.config)?void 0:l.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))}))}));const n=(null==(t=r.config)?void 0:t.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(n).forEach((e=>{r.elems.forEach((t=>{var l;t.style[e]="",t.classList.remove(...k((null==(l=r.config)?void 0:l.successFieldCssClass)||this.globalConfig.successFieldCssClass))}))}))}this.tooltips=[]}isTooltip(){return!!this.globalConfig.tooltip}lockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let i=0,t=e.length;i<t;++i)e[i].setAttribute("data-just-validate-fallback-disabled",e[i].disabled?"true":"false"),e[i].setAttribute("disabled","disabled"),e[i].style.pointerEvents="none",e[i].style.webkitFilter="grayscale(100%)",e[i].style.filter="grayscale(100%)"}unlockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let i=0,t=e.length;i<t;++i)"true"!==e[i].getAttribute("data-just-validate-fallback-disabled")&&e[i].removeAttribute("disabled"),e[i].style.pointerEvents="",e[i].style.webkitFilter="",e[i].style.filter=""}renderTooltip(e,t,l){var r;const{top:o,left:n,width:d,height:c}=e.getBoundingClientRect(),h=t.getBoundingClientRect(),f=l||(null==(r=this.globalConfig.tooltip)?void 0:r.position);switch(f){case"left":t.style.top=o+c/2-h.height/2+"px",t.style.left=n-h.width-5+"px";break;case"top":t.style.top=o-h.height-5+"px",t.style.left=n+d/2-h.width/2+"px";break;case"right":t.style.top=o+c/2-h.height/2+"px",t.style.left=`${n+d+5}px`;break;case"bottom":t.style.top=`${o+c+5}px`,t.style.left=n+d/2-h.width/2+"px"}t.dataset.direction=f;return{refresh:()=>{this.renderTooltip(e,t,l)}}}createErrorLabelElem(e,t,l){const r=document.createElement("div");r.innerHTML=t;const o=this.isTooltip()?null==l?void 0:l.errorLabelStyle:(null==l?void 0:l.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(r.style,o),r.classList.add(...k((null==l?void 0:l.errorLabelCssClass)||this.globalConfig.errorLabelCssClass),"just-validate-error-label"),this.isTooltip()&&(r.dataset.tooltip="true"),this.globalConfig.testingMode&&(r.dataset.testId=`error-label-${e}`),this.errorLabels[e]=r,r}createSuccessLabelElem(e,t,l){if(void 0===t)return null;const r=document.createElement("div");r.innerHTML=t;const o=(null==l?void 0:l.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(r.style,o),r.classList.add(...k((null==l?void 0:l.successLabelCssClass)||this.globalConfig.successLabelCssClass),"just-validate-success-label"),this.globalConfig.testingMode&&(r.dataset.testId=`success-label-${e}`),this.successLabels[e]=r,r}renderErrorsContainer(label,e){const t=e||this.globalConfig.errorsContainer;if("string"==typeof t){const e=this.form.querySelector(t);if(e)return e.appendChild(label),!0;console.error(`Error container with ${t} selector not found. Errors will be rendered as usual`)}return t instanceof Element?(t.appendChild(label),!0):(void 0!==t&&console.error("Error container not found. It should be a string or existing Element. Errors will be rendered as usual"),!1)}renderGroupLabel(e,label,t,l){if(!l){if(this.renderErrorsContainer(label,t))return}e.appendChild(label)}renderFieldLabel(e,label,t,l){var r,o,n,d,c,h,f;if(!l){if(this.renderErrorsContainer(label,t))return}if("checkbox"===e.type||"radio"===e.type){const t=document.querySelector(`label[for="${e.getAttribute("id")}"]`);"label"===(null==(o=null==(r=e.parentElement)?void 0:r.tagName)?void 0:o.toLowerCase())?null==(d=null==(n=e.parentElement)?void 0:n.parentElement)||d.appendChild(label):t?null==(c=t.parentElement)||c.appendChild(label):null==(h=e.parentElement)||h.appendChild(label)}else null==(f=e.parentElement)||f.appendChild(label)}showLabels(e,t){Object.keys(e).forEach(((l,i)=>{const r=e[l],o=this.getKeyByFieldSelector(l);if(!o||!this.fields[o])return void console.error("Field not found. Check the field selector.");const n=this.fields[o];n.isValid=!t,this.clearFieldStyle(o),this.clearFieldLabel(o),this.renderFieldError(o,!1,r),0===i&&this.globalConfig.focusInvalidField&&setTimeout((()=>n.elem.focus()),0)}))}showErrors(e){if("object"!=typeof e)throw Error("[showErrors]: Errors should be an object with key: value format");this.showLabels(e,!0)}showSuccessLabels(e){if("object"!=typeof e)throw Error("[showSuccessLabels]: Labels should be an object with key: value format");this.showLabels(e,!1)}renderFieldError(e,t=!1,l){var r,o,n,d,c,h;const f=this.fields[e];if(!1===f.isValid&&(this.isValid=!1),void 0===f.isValid||!t&&!this.isSubmitted&&!f.touched&&void 0===l)return;if(f.isValid){if(!f.asyncCheckPending){const t=this.createSuccessLabelElem(e,void 0!==l?l:f.successMessage,f.config);t&&this.renderFieldLabel(f.elem,t,null==(r=f.config)?void 0:r.errorsContainer,!0),f.elem.classList.add(...k((null==(o=f.config)?void 0:o.successFieldCssClass)||this.globalConfig.successFieldCssClass))}return}f.elem.classList.add(...k((null==(n=f.config)?void 0:n.errorFieldCssClass)||this.globalConfig.errorFieldCssClass));const m=this.createErrorLabelElem(e,void 0!==l?l:f.errorMessage,f.config);this.renderFieldLabel(f.elem,m,null==(d=f.config)?void 0:d.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(f.elem,m,null==(h=null==(c=f.config)?void 0:c.tooltip)?void 0:h.position))}renderGroupError(e,t=!0){var l,r,o,n;const d=this.groupFields[e];if(!1===d.isValid&&(this.isValid=!1),void 0===d.isValid||!t&&!this.isSubmitted&&!d.touched)return;if(d.isValid){d.elems.forEach((e=>{var t,l;Object.assign(e.style,(null==(t=d.config)?void 0:t.successFieldStyle)||this.globalConfig.successFieldStyle),e.classList.add(...k((null==(l=d.config)?void 0:l.successFieldCssClass)||this.globalConfig.successFieldCssClass))}));const t=this.createSuccessLabelElem(e,d.successMessage,d.config);return void(t&&this.renderGroupLabel(d.groupElem,t,null==(l=d.config)?void 0:l.errorsContainer,!0))}this.isValid=!1,d.elems.forEach((e=>{var t,l;Object.assign(e.style,(null==(t=d.config)?void 0:t.errorFieldStyle)||this.globalConfig.errorFieldStyle),e.classList.add(...k((null==(l=d.config)?void 0:l.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))}));const c=this.createErrorLabelElem(e,d.errorMessage,d.config);this.renderGroupLabel(d.groupElem,c,null==(r=d.config)?void 0:r.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(d.groupElem,c,null==(n=null==(o=d.config)?void 0:o.tooltip)?void 0:n.position))}renderErrors(e=!1){if(this.isSubmitted||e||this.globalConfig.validateBeforeSubmitting){this.clearErrors(),this.isValid=!0;for(const e in this.groupFields)this.renderGroupError(e);for(const e in this.fields)this.renderFieldError(e)}}destroy(){this.eventListeners.forEach((e=>{this.removeListener(e.type,e.elem,e.func)})),Object.keys(this.customStyleTags).forEach((e=>{this.customStyleTags[e].remove()})),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}refresh(){this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach((e=>{const t=this.getFieldSelectorByKey(e);t&&this.addField(t,[...this.fields[e].rules],this.fields[e].config)}))):console.error("Cannot initialize the library! Form is not defined")}setCurrentLocale(e){"string"==typeof e||void 0===e?(this.currentLocale=e,this.isSubmitted&&this.validate()):console.error("Current locale should be a string")}onSuccess(e){return this.onSuccessCallback=e,this}onFail(e){return this.onFailCallback=e,this}onValidate(e){return this.onValidateCallback=e,this}}}}]);